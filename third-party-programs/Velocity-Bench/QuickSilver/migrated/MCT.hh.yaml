---
MainSourceFile:  '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/out/MCT.hh'
Replacements:
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          3881
    Length:          0
    ReplacementText: "\nHOST_DEVICE\nMC_Nearest_Facet MCT_Nearest_Facet_host_ct2(\n    MC_Particle *mc_particle,\n    MC_Location &location,\n    MC_Vector &coordinate,\n    const DirectionCosine *direction_cosine,\n    double distance_threshold,\n    double current_best_distance,\n    bool new_segment,\n    MonteCarlo *monteCarlo);"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          4069
    Length:          0
    ReplacementText: "\nHOST_DEVICE\nvoid MCT_Generate_Coordinate_3D_G_host_ct9(\n    uint64_t *random_number_seed,\n    int domain_num,\n    int cell,\n    MC_Vector &coordinate,\n    MonteCarlo *monteCarlo);"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          4380
    Length:          20
    ReplacementText: ''
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          4465
    Length:          72
    ReplacementText: ''
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          4674
    Length:          0
    ReplacementText: "\ninline HOST_DEVICE\n\n    Subfacet_Adjacency &\n    MCT_Adjacent_Facet_host_ct0(const MC_Location &location, MC_Particle &mc_particle, MonteCarlo *monteCarlo)\n\n{\n\n   MC_Domain &domain = monteCarlo->domain[location.domain];\n\n   Subfacet_Adjacency &adjacency = domain.mesh._cellConnectivity[location.cell]._facet[location.facet].subfacet;\n\n   return adjacency;\n}"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          4772
    Length:          0
    ReplacementText: "\nHOST_DEVICE\nvoid MCT_Reflect_Particle_host_ct4(MonteCarlo *mcco, MC_Particle &particle);"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          8118
    Length:          20
    ReplacementText: ''
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          8203
    Length:          72
    ReplacementText: ''
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          9522
    Length:          0
    ReplacementText: "\ninline HOST_DEVICE\n    MC_Nearest_Facet\n    MCT_Nearest_Facet_host_ct2(MC_Particle *mc_particle,\n                      MC_Location &location,\n                      MC_Vector &coordinate,\n                      const DirectionCosine *direction_cosine,\n                      double distance_threshold,\n                      double current_best_distance,\n                      bool new_segment,\n                      MonteCarlo *monteCarlo)\n{\n   //    #ifndef BCMN_HAVE_OPENMP\n   //    MC_FASTTIMER_START(MC_Fast_Timer::Nearest_Facet);\n   //    #endif\n   //\n\n   if (location.domain < 0 || location.cell < 0)\n   {\n      qs_assert(false);\n      //         std::string output_string;\n      //         mc_particle->Copy_Particle_To_String(output_string);\n      //         MC_Fatal_Jump( \"Bad location value. region: %d domain: %d, cell: %d.\\nParticle record\\n%s\\n\",\n      //                          location.region, location.domain, location.cell, output_string.c_str());\n   }\n\n   MC_Domain &domain = monteCarlo->domain[location.domain];\n\n\n   MC_Nearest_Facet nearest_facet =\n       MCT_Nearest_Facet_3D_G(mc_particle, domain, location, coordinate, direction_cosine);\n\n   if (nearest_facet.distance_to_facet < 0)\n   {\n      nearest_facet.distance_to_facet = 0;\n   }\n\n   if (nearest_facet.distance_to_facet >= PhysicalConstants::_hugeDouble)\n   {\n      qs_assert(false);\n      //        MC_Warning( \"Infinite distance (cell not bound) for location [Reg:%d Local Dom:%d \"\n      //                    \"Global Dom: %d Cell:%d Fac:%d], coordinate (%g %g %g) and direction (%g %g %g).\\n\",\n      //                    location.region, location.domain,\n      //                    mcco->region->Global_Domain_Number(location.region, location.domain),\n      //                    location.cell, location.facet,\n      //                    coordinate.x, coordinate.y, coordinate.z,\n      //                    direction_cosine->alpha, direction_cosine->beta, direction_cosine->gamma);\n      //        if ( mc_particle )\n      //        {\n      //           MC_Warning( \"mc_particle.identifier %\" PRIu64 \"\\n\", mc_particle->identifier );\n      //        }\n   }\n\n   //    #ifndef BCMN_HAVE_OPENMP\n   //    MC_FASTTIMER_STOP(MC_Fast_Timer::Nearest_Facet);\n   //    #endif\n\n   return nearest_facet;\n}"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          9627
    Length:          0
    ReplacementText: "/*\nDPCT1110:29: The total declared local variable size in device function MCT_Generate_Coordinate_3D_G exceeds 128 bytes and may cause high register pressure. Consult with your hardware vendor to find the total register size available and adjust the code, or use smaller sub-group size to avoid high register pressure.\n*/\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          10022
    Length:          20
    ReplacementText: ''
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          10108
    Length:          73
    ReplacementText: ''
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          12500
    Length:          0
    ReplacementText: "\ninline HOST_DEVICE_CUDA void MCT_Generate_Coordinate_3D_G_host_ct9(uint64_t *random_number_seed,\n                                                          int domain_num,\n                                                          int cell,\n                                                          MC_Vector &coordinate,\n                                                          MonteCarlo *monteCarlo)\n{\n\n   const MC_Domain &domain = monteCarlo->domain[domain_num];\n\n\n   // Determine the cell-center nodal point coordinates.\n   MC_Vector center = MCT_Cell_Position_3D_G(domain, cell);\n\n   int num_facets = domain.mesh._cellConnectivity[cell].num_facets;\n   if (num_facets == 0)\n   {\n      coordinate.x = coordinate.y = coordinate.z = 0;\n      return;\n   }\n\n   double random_number = rngSample(random_number_seed);\n   double which_volume = random_number * 6.0 * domain.cell_state[cell]._volume;\n\n   // Find the tet to sample from.\n   double current_volume = 0.0;\n   int facet_index = -1;\n   const MC_Vector *point0 = NULL;\n   const MC_Vector *point1 = NULL;\n   const MC_Vector *point2 = NULL;\n   while (current_volume < which_volume)\n   {\n      facet_index++;\n\n      if (facet_index == num_facets)\n      {\n         break;\n      }\n\n      int facet_points[3];\n      MCT_Facet_Points_3D_G(domain, cell, facet_index, 3, facet_points);\n      point0 = &domain.mesh._node[facet_points[0]];\n      point1 = &domain.mesh._node[facet_points[1]];\n      point2 = &domain.mesh._node[facet_points[2]];\n\n      double subvolume = MCT_Cell_Volume_3D_G_vector_tetDet(*point0, *point1, *point2, center);\n      current_volume += subvolume;\n   }\n\n   // Sample from the tet.\n   double r1 = rngSample(random_number_seed);\n   double r2 = rngSample(random_number_seed);\n   double r3 = rngSample(random_number_seed);\n\n   // Cut and fold cube into prism.\n   if (r1 + r2 > 1.0)\n   {\n      r1 = 1.0 - r1;\n      r2 = 1.0 - r2;\n   }\n   // Cut and fold prism into tetrahedron.\n   if (r2 + r3 > 1.0)\n   {\n      double tmp = r3;\n      r3 = 1.0 - r1 - r2;\n      r2 = 1.0 - tmp;\n   }\n   else if (r1 + r2 + r3 > 1.0)\n   {\n      double tmp = r3;\n      r3 = r1 + r2 + r3 - 1.0;\n      r1 = 1.0 - r2 - tmp;\n   }\n\n   // numbers 1-4 are the barycentric coordinates of the random point.\n   double r4 = 1.0 - r1 - r2 - r3;\n\n   // error check\n   if ((point0 == NULL) || (point1 == NULL) || (point2 == NULL))\n   {\n      MC_Fatal_Jump(\"Programmer Error: points must not be NULL: point0=%p point1=%p point2=%p\",\n                    point0, point1, point2);\n      return;\n   }\n\n   coordinate.x = (r4 * center.x + r1 * point0->x + r2 * point1->x + r3 * point2->x);\n   coordinate.y = (r4 * center.y + r1 * point0->y + r2 * point1->y + r3 * point2->y);\n   coordinate.z = (r4 * center.z + r1 * point0->z + r2 * point1->z + r3 * point2->z);\n}"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          21135
    Length:          20
    ReplacementText: ''
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          21222
    Length:          74
    ReplacementText: ''
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          22265
    Length:          0
    ReplacementText: "\ninline HOST_DEVICE void MCT_Reflect_Particle_host_ct4(MonteCarlo *monteCarlo, MC_Particle &particle)\n{\n   DirectionCosine *direction_cosine = particle.Get_Direction_Cosine();\n   MC_Location location = particle.Get_Location();\n\n\n   const MC_Domain &domain = location.get_domain(monteCarlo);\n\n   const MC_General_Plane &plane = domain.mesh._cellGeometry[location.cell]._facet[location.facet];\n\n   MC_Vector facet_normal(plane.A, plane.B, plane.C);\n\n   double dot = 2.0 * (direction_cosine->alpha * facet_normal.x +\n                       direction_cosine->beta * facet_normal.y +\n                       direction_cosine->gamma * facet_normal.z);\n\n   if (dot > 0) // do not reflect a particle that is ALREADY pointing inward\n   {\n      // reflect the particle\n      direction_cosine->alpha -= dot * facet_normal.x;\n      direction_cosine->beta -= dot * facet_normal.y;\n      direction_cosine->gamma -= dot * facet_normal.z;\n   }\n\n   // Calculate the reflected, velocity components.\n   double particle_speed = particle.velocity.Length();\n   particle.velocity.x = particle_speed * particle.direction_cosine.alpha;\n   particle.velocity.y = particle_speed * particle.direction_cosine.beta;\n   particle.velocity.z = particle_speed * particle.direction_cosine.gamma;\n}"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Offset:          26507
    Length:          0
    ReplacementText: "   /*\n   DPCT1110:28: The total declared local variable size in device function MCT_Nearest_Facet_3D_G exceeds 128 bytes and may cause high register pressure. Consult with your hardware vendor to find the total register size available and adjust the code, or use smaller sub-group size to avoid high register pressure.\n   */\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
MainSourceFilesDigest:
  - MainSourceFile:  '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src/MCT.hh'
    Digest:          c5cb5924e7e11dcced00f7acc3b224d6
DpctVersion:     18.0.0
MainHelperFileName: ''
USMLevel:        ''
FeatureMap:      {}
CompileTargets:  {}
OptionMap:
  AnalysisScopePath:
    Value:           '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src'
    Specified:       false
  AsyncHandler:
    Value:           'false'
    Specified:       false
  CommentsEnabled:
    Value:           'false'
    Specified:       false
  CompilationsDir:
    Value:           '/home/local_user/sandbox/SYCLomatic-test/third-party-programs/Velocity-Bench/QuickSilver/CUDA/src'
    Specified:       true
  CtadEnabled:
    Value:           'false'
    Specified:       false
  EnablepProfiling:
    Value:           'false'
    Specified:       false
  ExperimentalFlag:
    Value:           '0'
    Specified:       false
  ExplicitClNamespace:
    Value:           'false'
    Specified:       false
  ExplicitNamespace:
    Value:           '20'
    Specified:       false
  ExtensionDDFlag:
    Value:           '0'
    Specified:       false
  ExtensionDEFlag:
    Value:           '4294967295'
    Specified:       false
  HelperFuncPreferenceFlag:
    Value:           '0'
    Specified:       false
  NDRangeDim:
    Value:           '3'
    Specified:       false
  NoDRYPattern:
    Value:           'false'
    Specified:       false
  NoUseGenericSpace:
    Value:           ''
    Specified:       true
  OptimizeMigration:
    Value:           'false'
    Specified:       false
  ProcessAll:
    Value:           'false'
    Specified:       false
  RuleFile:
    Value:           ''
    Specified:       false
  SyclNamedLambda:
    Value:           'false'
    Specified:       false
  UsmLevel:
    Value:           '1'
    Specified:       false
...
